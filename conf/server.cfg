//
// LRG SERVER CONFIG
//

///////////////////////////////////////////////////////////
// GENERAL SETTINGS
///////////////////////////////////////////////////////////

// hostname: Name of the server displayed in the public server list
hostname       = "[YAINA] Phoenix Testing || Invade and Annex";

// Specify admins that can just use #login without passwords
// Currently: Mitch + MartinCo
admins[] = {"76561198192369291", "76561197981494016"};

// maxPlayers: Maximum amount of players, including headless clients. Anybody
// who joins the server is considered a player, regardless of their role or team.
maxPlayers     = 64;

// persistent: If set to 1, missions will continue to run after all players have disconnected;
// required if you want to use the -autoInit startup parameter
persistent     = 1;

// disableVoN: If set to 1, voice chat will be disabled
disableVoN       = 0;

// vonCodecQuality: Supports range 1-30
// 1-10 is 8kHz (narrowband)
// 11-20 is 16kHz (wideband)
// 21-30 is 32kHz (ultrawideband)
// higher = better sound quality, more bandwidth consumption
vonCodecQuality  = 30;


///////////////////////////////////////////////////////////
// VOTING
///////////////////////////////////////////////////////////


// voteMissionPlayers: Minimum number of players required before
// displaying the mission selection screen, if you have not
// already selected a mission in this config
voteMissionPlayers = 1;

// Percentage (0.00 to 1.00) of players needed to vote something into
// effect, for example an admin or a new mission. Set to 9999 to disable voting.
voteThreshold = 999;

// allowedVoteCmds: Voting commands allowed to players
allowedVoteCmds[] = {};


///////////////////////////////////////////////////////////
// MOTD
///////////////////////////////////////////////////////////

motd[]={
"",
"",
"Welcome to the Last Resort Gaming Public Server",
"Apply at www.LastResortGaming.net",
"This Server Restarts at 0300 and 1500 daily.",
"Zeus Missions every Tuesday at 1900!"
};
motdInterval=30;

///////////////////////////////////////////////////////////
// LOGGING
///////////////////////////////////////////////////////////

// timeStampFormat: Timestamp format used in the server RPT logs.
// Possible values are "none" (default), "short", "full"
timeStampFormat  = "short";

// logFile: Server console output filename
logFile          = "server_console.log";

///////////////////////////////////////////////////////////
// SECURITY
///////////////////////////////////////////////////////////

BattlEye             = 0;    // If set to 1, BattlEye Anti-Cheat will be enabled on the server (default: 1, recommended: 1)
verifySignatures     = 2;    // If set to 2, players with unknown or unsigned mods won't be allowed join (default: 0, recommended: 2)
kickDuplicate        = 1;    // If set to 1, players with an ID that is identical to another player will be kicked (recommended: 1)
allowedFilePatching  = 1;    // Prevents clients with filePatching enabled from joining the server (0 = block filePatching, 1 = allow headless clients, 2 = allow all) (default: 0, recommended: 1)

// FILE EXTENSIONS
allowedLoadFileExtensions[] =       {"hpp","sqs","sqf","fsm","cpp","paa","txt","xml","inc","ext","sqm","ods","fxy","lip","csv","kb","bik","bikb","html","htm","biedi"}; // only allow files with those extensions to be loaded via loadFile command (since Arma 3 v1.19.124216) 
allowedPreprocessFileExtensions[] = {"hpp","sqs","sqf","fsm","cpp","paa","txt","xml","inc","ext","sqm","ods","fxy","lip","csv","kb","bik","bikb","html","htm","biedi"}; // only allow files with those extensions to be loaded via preprocessFile / preprocessFileLineNumbers commands (since Arma 3 v1.19.124323)
allowedHTMLLoadExtensions[] =       {"htm","html","php","xml","txt"}; // only allow files and URLs with those extensions to be loaded via htmlLoad command (since Arma 3 v1.27.126715)

// EVENT SCRIPTS - see http://community.bistudio.com/wiki/ArmA:_Server_Side_Scripting
onUserConnected     = "";    // command to run when a player connects
onUserDisconnected  = "";    // command to run when a player disconnects
doubleIdDetected    = "";    // command to run if a player has the same ID as another player in the server
onUnsignedData      = "kick (_this select 0)";    // command to run if a player has unsigned files
onHackedData        = "kick (_this select 0)";    // command to run if a player has tampered files

// HEADLESS CLIENT
headlessClients[]  = {"127.0.0.1"};    // list of IP addresses allowed to connect using headless clients; example: {"127.0.0.1", "192.168.1.100"};
localClient[]      = {"127.0.0.1"};    // list of IP addresses to which are granted unlimited bandwidth; example: {"127.0.0.1", "192.168.1.100"};

///////////////////////////////////////////////////////////
// MISSION SETTINGS
///////////////////////////////////////////////////////////

forcedDifficulty = "Custom";